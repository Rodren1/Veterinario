<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACEUExURf///wAAAOzs7Pz8/PPz8/b29uXl5SMjI+np6aWlpaysrLq6uvn5+dfX12RkZN/f33h4
        eI2NjRAQEG9vby4uLrOzsxkZGb+/vzQ0NM7Ozs/Pz1dXV5ycnIODg5CQkEBAQCgoKBMTE0lJSV5eXo+P
        j4aGhkJCQnNzc5iYmFJSUkhISGlpaYWkybsAAAndSURBVHhe7Z3nYuI6EIWz1BQIvW3IQpJNNuX93+9C
        OBB0RjZWAY25fP/iFg2Wp2kkXZ2CVmUyupk/3n8O+/3xcrr4/Hh5vLlr11s4X2pqndvu568M+p+D998V
        XFlKrkcvTQiTw/N7G9eXjOpoChEO8/S3gbvKQ7uLxhfl+Q53loP2F9rtwvS2itvVU7lHm10ZTvAE5czR
        Xh+eS/A9tovrFys3eI5abtFQfx5qeJROfDQM0+zgYQqpB/bQLWoVTmWJFgaj1DZeF/DQijLCM1VRy32D
        w+7N7WjSrrRq153279lo/pXfoxV21Gpmiz8e79pWb6Uymz9kvnd96ibDj7m/u8YFdmqzf7iSaNZxhRZu
        0DCTP0WCv9qt9fV/4bQS2miWwXthT3oyxC376NI2C7Rqj/v87knYnFlN0b+lj7q+gYb8kQY4pYAamvTD
        2OkFbhjg3h/06FMRzz97KcIe7t7xgRPJaaBBO54904R/cP+OGU6k5hHt2TL0NmVsVJVYjAqasyMgTmfL
        6PE5HwFWpCF2jO3qXxxPC/3uYerhL54C+jiclA4asyUsgV3r4zHgN46nhBTgPxz2hZybVxxOCcU/oa5W
        Fc8BCrrpNZoCwo00uQ/pR21GaAkIz7DQd50+wqD8YYShBzOSSm/0zZCgi6MhvOJZG6Y4moyKqd1j9KkZ
        ngVSj2SQExKjOaS7UquaCdqxwd/n3ucNT9uQOjtsOqUvOBqGqbxSu6amWojjgZiRcKiTFIqZ7Ywz+HeH
        p224x9FUmDFrnFy8qUwTpzKqplaIEwmY+nmRtn6hbvrdcZJjpt+2TJver4/Rjg1xrLOZ2eqnHfW+SOiF
        6dSklvAJ7dhwhhLWLhL6oEtCM3iKk8Cl4OIi4XG5SOiFLgnRCnCRsBgXCU/K/07COPUh5y8hDSpfJDwu
        /wMJTYt/kbAYFwlPCsX4Zyghma6jSBgnrPaFyrSOImHSIkyupYnToapm10/6EqkK/QmHQ6ECloRD+dSd
        ovUnrldN9xK5ODtWOehvPG9Luhl7D2gBiDcO9oEngmQDbDUzpR+xM7EGixN3ukN1GDGL7KgcMFWFIpXO
        xqyspzKdWxw+NeYPvcDROLzgqRt6OHpqzAr2uDUT73jqhhjFZD6YZitu3Ys5Y/ocJTS/8VQSmtVCcXup
        6Q8+4uipMV2auJrGLOpMpWnM2qWo1oJMbarqPZrvFPNjMY1FMtebJzfHm4dFxePpioZ4xmCsYleeGxSn
        qNMH+hCPU9e2ImERLQUXcUQUAsaYAOCLmJ88DG8MJShXpLL3a+poww9znPGH52umiw6/MR3kNTjhD57z
        QypzD8wK2hWhZcJm8f+KceK1B4VaCM23iWUykq9ywspmHJYV5tzPr3ecSIgZYYQaL+6kKtZVoPxtmANC
        AyGppyIAWtEiRLnTqHnciMwf6qchGWpa7i3cusaB8rdNHPbhaDnmQKib+k9CJFc+8XSZPSg1vMRhdyjg
        TD8HeAu7p74Gg2aPpowpGNLxvnN3achJ0RpDwk77dS9+iqoFlEnX9L0SK7Tg1zMO64DzGT7pYY7EdC0s
        KNYUdO9hXBSgxZ/ZwmvPurePV1BKNWaYCdq1w3WghlKkEZIFsREtdPuMeORe3yu05DNcYgzxHSdfDsOC
        yGe4fIoid6FlpTYDrmRyyHOKNbKVRL4ERa8rikaKXAOlKGwykauVF6vGlD9N4hRpNlQFVlRCtvW/hjih
        DzHk4Cmh0j66hgM8PwlVbx5AS5B6SZhuPLQQZirJS8JiNyXDLGD2kTAkVXcKLhLauEioi4uENkolYctn
        ppcp4ZPuHfWo1M1HQs0+2woKg4uNeFNsoSoRLDAd04IVd3Vz/xaV4f0Os9znAUcPYUZdqQqCC0EJpaKZ
        bzNLM1U05CSgnGDRQeojTk2JDdWkFdUZpJ8Ud1OyFc2ilq1FW0XptRfexTA6q2gknMMontfnsVENq+lb
        oPlmTmMruGPLUzFn6MS0eOjBRWFw2exUoXNapSkSbvqCdNTKWVBnFCv8Bh0rKcRWSFNlHZWVzAo3uy3G
        D3X5px3RQ91nBXOZ6ooXJc5NayaG1VY8udabyEkIK7qzxBqn1ZndDcy8xRb3UhFRwv5Nc3A365xKzOpk
        IObIZOHjWsqJFkx/3FxOp2+fg8kxNG2jZ+tGGXziJjc+cXcBnnqxfdeO01bGTb9CaLfNaL9i6qGG41bN
        vr+vsPv5fMV6j9eiUOIA/j+uxSrm8i/KlCgKwA/SDPllG04ddUX4aGrjGY8qyluYt1URhUcHCN1RX85N
        O0B4BuKw0SBC5g11hDt9gGWMmtCJ6wbmU+8PX9bHHOBPHOejJXbrPIRnmZ/c2zWfbjwj3LC5unn4FL07
        bnbf7MWN5yo9N626dP73bU665LHoHiOWm3WpPj6XvuOAjt3RtzAd9EaNY2Ucqo1Rb1BY2zlpuUwd89i4
        qu6D648L/teGq0amOXHQNxluzHiuIz3UmmdEcYUdHLGOwIZ52k179qlnNRHnD2C/220z+KNzbUkNrSgk
        orWLNvUNzE6sXbVARxXrlawZKExBX7WsUevBmYGy5HqFnpmOJlaVf2BUxxZlL5WkLS10bI5PrvMo1ypR
        PJj3jU3h5Ol8UYqednGYIlhSLDklIFTDvEbtvIAdluGAzEZb1KiWKf95WOx3hkK1aBmtStRETJvL0jYy
        B6R6WsAe0kl5wxkDmXTS/w1ukQrEkp6Spl67Ft1HZj2E4a+KpEXRsjsdCDu35EhP/AiJt3B1pSoyHtQF
        xQTQwOWeTo9YYIqq6sQvoLQqKQehSIxZusJJL4ud2EfYjL28De0Wo376WAbshe/t7ynUjJ6MjAsiMtop
        GzEuGWN8JQUiy7uNbPntpt6R3h8OpfC1CUtRzj66RvTTjcVgdyDhmrbBcAD47Zhx0Z2upX1c4UH5dRaU
        X6HevFMRWGuuXiJ/hTF3GkkBJzXa3HMT74IdDnsvc04BKFgQNRCK5F/YJS1XzGSjCklAn/zVMnrcDHng
        9DcuKjeQBVC2EdeUG8gCaEsjXFNuIAugMjJcU24gC6DKJ1xTbiALoIlxuKbcQBZAq6LimnIDWQCNVuCa
        cgNZAC1OjGvKDWQBtFQHrik3kAVcmfNEcE25gSyA/zwHIAvwWpxLN+ZSKWMasShrpnQfM2u6IItfrkFD
        O2bi6Z7zGmVOJW6gtMyrKGQou4icMR3JxUMfJuVVN5WJGO2uWSu9zoi1YpHFKOfEOvFUd50QVyaa36NM
        ztObSgQGumnXhTNiuyCxGEA8G3YFJ5bivrNgr7TSecJfKTC2ZzhHEWn/ifPrqKL6t31eGnVom454ez6m
        v5kxUa9+cx4+6sNNTr1MbfR6vyi8Ros6xov715ExTn919R9gzXKwQ/qWUAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TIKgwAMFUCgECqgEIBXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>